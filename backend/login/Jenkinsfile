pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "marwen77/mysiteweb:latest"
        DOCKER_HUB_CREDS = 'docker-hub-creds'
        COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/marwanbarhoumi/memoire-Ecommerce.git', credentialsId: 'github-creds'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE} .'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    sh "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Deploy') {
            steps {
                sh "docker-compose -f ${COMPOSE_FILE} up -d"
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    def containerStatus = sh(script: 'docker ps', returnStatus: true)
                    if (containerStatus != 0) {
                        error "Deployment failed! Container is not running."
                    } else {
                        echo "Deployment verified successfully!"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Le déploiement a réussi !'
        }
        failure {
            echo 'Le déploiement a échoué.'
        }
    }
}
